name: Build and Deploy to Cloud Run

on:
  push:
    branches: ["master"]

env:
  PROJECT_ID: lbittencourt-xyz
  GAR_LOCATION: southamerica-east1
  SERVICE: ambiental-media-app
  REGION: southamerica-east1

jobs:
  deploy:
    permissions:
      contents: "read"
      id-token: "write"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      # BEGIN - Docker auth and build

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -f Dockerfile.api -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}-api/api-image:${{ github.sha }}" --build-arg gcp_credentials='${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}-api/api-image:${{ github.sha }}"
          docker build -f Dockerfile.cron -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}-cron/cron-image:${{ github.sha }}" --build-arg gcp_credentials='${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}' ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}-cron/cron-image:${{ github.sha }}"

      # END - Docker auth and build

      - name: Deploy API to Cloud Run
        id: deploy-api
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}-api
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}-api/api-image:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
